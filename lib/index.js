import*as tslib_1 from"tslib";import{interpret,Machine}from"xstate";import{v4}from"uuid";import{Component,Vue,Prop}from"vue-property-decorator";let XState=class extends Vue{constructor(){super(...arguments),this.context={},this.currentState="",this.stateHash=v4(),this.$xStateSubscription=null}xStateInit(t,e,a={}){this.$xStateStateMachine=Machine(e,{},t).withConfig(a),this.$xStateInterpreter=interpret(this.$xStateStateMachine),this.$xStateSubscription=this.channel?this.channel.subscribe(t=>this.$xStateInterpreter.send(t)):null,this.$xStateHandleChange({currentState:this.$xStateStateMachine.initialState.value,context:this.$xStateStateMachine.context,stateHash:v4()}),this.$xStateInitInterpreter()}dispatch(t){this.$xStateInitInterpreter?this.$xStateInterpreter.send(t):console.warn("%cx-state mixin: %cThe machine was not initialized,\n\t\t\t please use %cinitState() %con %ccreated() %cfor it","font-weight:bold; color:black","","color:blue","","color:blue","")}beforeDestroy(){this.$xStateSubscription&&this.$xStateSubscription.unsubscribe()}$xStateHandleChange(t){const{currentState:e=this.currentState,context:a=this.context,stateHash:n}=t;this.currentState=e,this.context=a,this.stateHash=n}$xStateInitInterpreter(){const t=this.$xStateInterpreter;t.start(),t.onTransition(t=>{const{changed:e,value:a,context:n}=t;e&&a!==this.currentState&&this.$xStateHandleChange({currentState:a,context:n,stateHash:v4()})}),t.onChange(t=>{t!==this.context&&this.$xStateHandleChange({context:t,stateHash:v4()})})}};tslib_1.__decorate([Prop()],XState.prototype,"channel",void 0);export default XState=tslib_1.__decorate([Component],XState);